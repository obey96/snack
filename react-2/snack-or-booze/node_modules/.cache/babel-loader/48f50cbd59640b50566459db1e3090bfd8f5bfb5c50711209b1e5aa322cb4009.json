{"ast":null,"code":"var _jsxFileName = \"/home/obey/snack_booze/react-2/react-2/snack-or-booze/src/FoodItem.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ItemDetails({\n  items,\n  cantFind,\n  type\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n\n  // Find the item based on the type (snack or drink)\n  let item = items.find(item => item.id === id);\n  if (!item) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: cantFind\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"font-weight-bold text-center\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          className: \"font-italic\",\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), type === \"snacks\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Recipe:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), \" \", item.recipe]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Serve:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), \" \", item.serve]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), type === \"drinks\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Ingredients:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), \" \", item.ingredients]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Alcoholic:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), \" \", item.alcoholic ? \"Yes\" : \"No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(ItemDetails, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = ItemDetails;\nexport default ItemDetails;\nvar _c;\n$RefreshReg$(_c, \"ItemDetails\");","map":{"version":3,"names":["React","Redirect","useParams","Card","CardBody","CardTitle","CardText","jsxDEV","_jsxDEV","Fragment","_Fragment","ItemDetails","items","cantFind","type","_s","id","item","find","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","name","description","recipe","serve","ingredients","alcoholic","_c","$RefreshReg$"],"sources":["/home/obey/snack_booze/react-2/react-2/snack-or-booze/src/FoodItem.js"],"sourcesContent":["import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\n\nfunction ItemDetails({ items, cantFind, type }) {\n  const { id } = useParams();\n\n  // Find the item based on the type (snack or drink)\n  let item = items.find(item => item.id === id);\n  if (!item) return <Redirect to={cantFind} />;\n\n  return (\n    <section>\n      <Card>\n        <CardBody>\n          <CardTitle className=\"font-weight-bold text-center\">\n            {item.name}\n          </CardTitle>\n          <CardText className=\"font-italic\">{item.description}</CardText>\n          {/* Display the recipe and serve properties dynamically based on item type */}\n          {type === \"snacks\" && (\n            <>\n              <p>\n                <b>Recipe:</b> {item.recipe}\n              </p>\n              <p>\n                <b>Serve:</b> {item.serve}\n              </p>\n            </>\n          )}\n          {type === \"drinks\" && (\n            <>\n              <p>\n                <b>Ingredients:</b> {item.ingredients}\n              </p>\n              <p>\n                <b>Alcoholic:</b> {item.alcoholic ? \"Yes\" : \"No\"}\n              </p>\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default ItemDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}